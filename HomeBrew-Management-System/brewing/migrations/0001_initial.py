# Generated by Django 5.2 on 2025-06-29 15:48

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('recipes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BrewSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('batch_name', models.CharField(max_length=200)),
                ('brew_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('planning', 'Planning'), ('active', 'Active Brewing'), ('fermenting', 'Fermenting'), ('conditioning', 'Conditioning'), ('completed', 'Completed'), ('failed', 'Failed')], default='planning', max_length=20)),
                ('current_stage', models.CharField(choices=[('preparation', 'Preparation'), ('mashing', 'Mashing'), ('sparging', 'Sparging'), ('boiling', 'Boiling'), ('cooling', 'Cooling'), ('fermentation', 'Fermentation'), ('secondary', 'Secondary Fermentation'), ('conditioning', 'Conditioning'), ('packaging', 'Packaging'), ('completed', 'Completed')], default='preparation', max_length=20)),
                ('actual_batch_size', models.FloatField(blank=True, help_text='Actual batch size in liters', null=True)),
                ('actual_og', models.FloatField(blank=True, help_text='Actual Original Gravity', null=True)),
                ('actual_fg', models.FloatField(blank=True, help_text='Actual Final Gravity', null=True)),
                ('actual_abv', models.FloatField(blank=True, help_text='Actual ABV', null=True)),
                ('actual_efficiency', models.FloatField(blank=True, help_text='Actual brewing efficiency %', null=True)),
                ('fermentation_start', models.DateTimeField(blank=True, null=True)),
                ('fermentation_end', models.DateTimeField(blank=True, null=True)),
                ('packaging_date', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('public_notes', models.TextField(blank=True, help_text='Notes to share publicly')),
                ('photo', models.ImageField(blank=True, upload_to='brew_sessions/')),
                ('brewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
            options={
                'ordering': ['-brew_date'],
            },
        ),
        migrations.CreateModel(
            name='BrewStepLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('step_name', models.CharField(max_length=200)),
                ('step_type', models.CharField(choices=[('mash', 'Mash Step'), ('boil', 'Boil Addition'), ('temperature', 'Temperature Change'), ('transfer', 'Transfer'), ('measurement', 'Measurement'), ('note', 'General Note')], max_length=50)),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_minutes', models.IntegerField(blank=True, null=True)),
                ('target_temperature', models.FloatField(blank=True, help_text='Target temp in 째C', null=True)),
                ('actual_temperature', models.FloatField(blank=True, help_text='Actual temp in 째C', null=True)),
                ('notes', models.TextField(blank=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('brew_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewing.brewsession')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='BrewTimer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('duration_minutes', models.IntegerField()),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('alert_sent', models.BooleanField(default=False)),
                ('brew_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewing.brewsession')),
            ],
            options={
                'ordering': ['start_time'],
            },
        ),
        migrations.CreateModel(
            name='GravityReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('gravity', models.FloatField(help_text='Specific Gravity')),
                ('reading_type', models.CharField(choices=[('original', 'Original Gravity'), ('final', 'Final Gravity'), ('progress', 'Fermentation Progress')], max_length=20)),
                ('temperature', models.FloatField(blank=True, help_text='Sample temperature 째C', null=True)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('brew_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewing.brewsession')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TemperatureReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('temperature', models.FloatField(help_text='Temperature in 째C')),
                ('reading_type', models.CharField(choices=[('mash', 'Mash Temperature'), ('boil', 'Boil Temperature'), ('fermentation', 'Fermentation Temperature'), ('ambient', 'Ambient Temperature')], default='fermentation', max_length=20)),
                ('notes', models.CharField(blank=True, max_length=200)),
                ('brew_session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='brewing.brewsession')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
