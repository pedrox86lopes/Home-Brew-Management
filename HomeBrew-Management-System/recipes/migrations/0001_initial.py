# Generated by Django 5.2 on 2025-06-29 15:48

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Grain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('grain_type', models.CharField(choices=[('base', 'Base Malt'), ('specialty', 'Specialty Malt'), ('crystal', 'Crystal/Caramel'), ('roasted', 'Roasted'), ('adjunct', 'Adjunct')], max_length=20)),
                ('color', models.IntegerField(help_text='Color in SRM')),
                ('extract_potential', models.FloatField(help_text='Extract potential (PPG)')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['grain_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Hop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('hop_type', models.CharField(choices=[('bittering', 'Bittering'), ('aroma', 'Aroma'), ('dual', 'Dual Purpose')], max_length=20)),
                ('alpha_acid', models.FloatField(help_text='Alpha acid percentage')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Yeast',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('laboratory', models.CharField(max_length=50)),
                ('strain_number', models.CharField(max_length=20)),
                ('yeast_type', models.CharField(choices=[('ale', 'Ale'), ('lager', 'Lager'), ('wild', 'Wild/Brett'), ('wheat', 'Wheat')], max_length=20)),
                ('attenuation', models.FloatField(help_text='Typical attenuation %')),
                ('temp_range_min', models.IntegerField(help_text='Min temperature °C')),
                ('temp_range_max', models.IntegerField(help_text='Max temperature °C')),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['laboratory', 'strain_number'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('batch_size', models.FloatField(help_text='Batch size in liters')),
                ('efficiency', models.FloatField(default=75.0, help_text='Expected efficiency %')),
                ('calculated_og', models.FloatField(blank=True, null=True)),
                ('calculated_fg', models.FloatField(blank=True, null=True)),
                ('calculated_ibu', models.FloatField(blank=True, null=True)),
                ('calculated_srm', models.FloatField(blank=True, null=True)),
                ('calculated_abv', models.FloatField(blank=True, null=True)),
                ('is_public', models.BooleanField(default=False)),
                ('is_favorite', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='General brewing notes')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('style', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.beerstyle')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HopAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(help_text='Weight in kg')),
                ('boil_time', models.IntegerField(default=0, help_text='Boil time in minutes')),
                ('use', models.CharField(choices=[('boil', 'Boil'), ('flameout', 'Flameout'), ('dry_hop', 'Dry Hop'), ('whirlpool', 'Whirlpool')], default='boil', max_length=20)),
                ('hop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.hop')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
            options={
                'ordering': ['-boil_time', '-weight'],
            },
        ),
        migrations.CreateModel(
            name='GrainAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('weight', models.FloatField(help_text='Weight in kg')),
                ('percentage', models.FloatField(blank=True, help_text='Percentage of grain bill', null=True)),
                ('grain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.grain')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
            options={
                'ordering': ['-weight'],
            },
        ),
        migrations.CreateModel(
            name='RecipeStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('step_type', models.CharField(choices=[('mash', 'Mash'), ('boil', 'Boil'), ('fermentation', 'Fermentation'), ('packaging', 'Packaging'), ('other', 'Other')], max_length=20)),
                ('order', models.IntegerField()),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('duration', models.IntegerField(blank=True, help_text='Duration in minutes', null=True)),
                ('temperature', models.IntegerField(blank=True, help_text='Temperature in °C', null=True)),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='YeastAddition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField(help_text='Amount (packets/vials)')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.recipe')),
                ('yeast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='recipes.yeast')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
