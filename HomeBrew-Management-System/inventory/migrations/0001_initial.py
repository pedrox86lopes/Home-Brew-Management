# Generated by Django 5.2 on 2025-06-29 15:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('brewing', '0001_initial'),
        ('recipes', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('website', models.URLField(blank=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient_type', models.CharField(choices=[('grain', 'Grain/Malt'), ('hop', 'Hop'), ('yeast', 'Yeast'), ('other', 'Other')], max_length=20)),
                ('ingredient_id', models.PositiveIntegerField()),
                ('ingredient_name', models.CharField(max_length=200)),
                ('current_stock', models.FloatField(default=0.0, validators=[django.core.validators.MinValueValidator(0)])),
                ('unit', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('lb', 'Pounds'), ('oz', 'Ounces'), ('unit', 'Units/Packages')], default='kg', max_length=10)),
                ('cost_per_unit', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('cost_per_kg', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('last_purchase_date', models.DateField(blank=True, null=True)),
                ('last_purchase_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('minimum_stock', models.FloatField(default=0.0, help_text='Minimum stock level for alerts')),
                ('location', models.CharField(blank=True, help_text='Storage location', max_length=100)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
            ],
            options={
                'ordering': ['ingredient_name'],
                'unique_together': {('user', 'ingredient_type', 'ingredient_id')},
            },
        ),
        migrations.CreateModel(
            name='InventoryTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_type', models.CharField(choices=[('purchase', 'Purchase'), ('use', 'Used in Recipe'), ('waste', 'Waste/Loss'), ('adjustment', 'Stock Adjustment')], max_length=20)),
                ('quantity', models.FloatField()),
                ('unit', models.CharField(max_length=10)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True)),
                ('brew_session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='brewing.brewsession')),
                ('inventory_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.inventoryitem')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='recipes.recipe')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(default='Shopping List', max_length=200)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ingredient_type', models.CharField(choices=[('grain', 'Grain/Malt'), ('hop', 'Hop'), ('yeast', 'Yeast'), ('other', 'Other')], max_length=20)),
                ('ingredient_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ingredient_name', models.CharField(max_length=200)),
                ('quantity_needed', models.FloatField()),
                ('unit', models.CharField(choices=[('kg', 'Kilograms'), ('g', 'Grams'), ('lb', 'Pounds'), ('oz', 'Ounces'), ('unit', 'Units/Packages')], max_length=10)),
                ('estimated_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_purchased', models.BooleanField(default=False)),
                ('purchased_date', models.DateField(blank=True, null=True)),
                ('actual_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('priority', models.IntegerField(default=1, help_text='1=High, 2=Medium, 3=Low')),
                ('notes', models.TextField(blank=True)),
                ('shopping_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.shoppinglist')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.supplier')),
            ],
            options={
                'ordering': ['priority', 'ingredient_name'],
            },
        ),
    ]
